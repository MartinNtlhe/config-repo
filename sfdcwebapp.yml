server:
  port: ${PORT:0}

management:
  endpoints:
    web:
      base-path: /manage
      exposure:
        include: "*"
    health:
      show-details: "when-authorized"

endpoints:
  env:
    keys-to-sanitize: pwd,uid,password,secret,key,client_id,client_key # suffix or regex

logging:
  level:
    com.netflix: INFO
    org.springframework.cloud: INFO
    io.pivotal.sfdc: INFO

info:
  component: SFDC Web Application
  app:
    name: ${project.name:sfdcwebapp}
    description: ${project.description:SFDC Web App}
    version: ${project.version:0.0.1-SNAPSHOT}
    group: ${project.groupId:io.pivotal.sfdc}
    artifact: ${project.artifactId:sfdcwebapp}

sfdc:
  apigateway:
    endpoint: http://sfdcapigateway
  service:
    unavailable: '{"status":503,"data": "Service currently unavailable."}'

---
spring:
  profiles: local
  instance:
    nonSecurePort: ${server.port}
  redis:
    host: redis
    port: 6379
eureka:
  instance:
    preferIpAddress: true
    hostname: sfdcwebapp
    nonSecurePort: ${server.port}
  client:
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone: http://${EUREKA_HOST:discovery}:8761/eureka/
# Ribbon Configurations
producer:
  ribbon:
    ServerListRefreshInterval: 5000
ribbon:
  IsSecure: false
---
spring:
  profiles: cloud # For deployment in Cloud Foundry
  cloud:
    services:
      registrationMethod: route
producer:
  ribbon:
    ServerListRefreshInterval: 5000
ribbon:
  IsSecure: false
