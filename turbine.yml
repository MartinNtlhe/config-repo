spring:
  profiles.active: local
  rabbitmq:
    host: ${vcap.services.p-rabbitmq.credentials.protocols.amqp.host:localhost}
    port: ${vcap.services.p-rabbitmq.credentials.protocols.amqp.port:5672}
    username: ${vcap.services.p-rabbitmq.credentials.protocols.amqp.username:guest}
    password: ${vcap.services.p-rabbitmq.credentials.protocols.amqp.password:guest}
    virtualHost: ${vcap.services.p-rabbitmq.credentials.protocols.amqp.vhost:/}

info:
  component: Turbine
  app:
    name: ${project.name:turbine}
    version: ${project.version:0.0.1-SNAPSHOT}
    group: ${project.groupId:io.pivotal.sfdc}
    artifact: ${project.artifactId:turbine}

security:
  basic:
    enabled: false

management:
  context-path: /manage
  security:
    enabled: false

logging:
  level:
    ROOT: INFO
    io.pivotal.sfdc: INFO
    org.springframework.web: DEBUG
  
endpoints:
  restart:
    enabled: true
  shutdown:
    enabled: true

server:
  port: 8989

eureka:
  instance:
    #preferIpAddress: false
    statusPageUrlPath: ${management.context-path}/info
    healthCheckUrlPath: ${management.context-path}/health
    registryFetchIntervalSeconds: 5
    leaseRenewalIntervalInSeconds: 5
  client:
    registerWithEureka: true
    fetchRegistry: true

turbine:
  appConfig: accountService,contactService,opportunityService,sfdcapigateway
  clusterNameExpression: 'default'

InstanceDiscovery:
  impl: com.netflix.turbine.discovery.EurekaInstanceDiscovery
---
spring:
  profiles: local
  instance:
    nonSecurePort: ${server.port}
eureka:
  instance:
    hostname: turbine
    nonSecurePort: ${server.port}
  client:
    serviceUrl:
      defaultZone: http://discovery:8761/eureka/

---
spring:
  profiles: cloud # For deployment in Cloud Foundry
  cloud:
    services:
      registrationMethod: route
eureka:
  instance:
    securePortEnabled: true
    nonSecurePortEnabled: false
    secureVirtualHostName: ${spring.application.name}
    metadataMap:
      instanceId: ${vcap.application.instance_id:${spring.application.name}:${spring.application.instance_id:${server.port}}}
