spring:
  profiles.active: local
server:
  port: 9003
security:
  basic:
    enabled: false

management:
  context-path: /manage
  security:
    enabled: false

endpoints:
  env:
    keys-to-sanitize: pwd,uid,password,secret,key,client_id,client_key # suffix or regex

logging:
  level:
    com.netflix: INFO
    org.springframework.cloud: INFO
    io.pivotal.sfdc: DEBUG

info:
  component: Opportunity Service
  app:
    name: ${project.name:opportunityService}
    description: ${project.description}
    version: ${project.version:0.0.1-SNAPSHOT}
    group: ${project.groupId:io.pivotal.sfdc}
    artifact: ${project.artifactId:opportunityService}

eureka:
  instance:
    statusPageUrlPath: ${management.context-path}/info
    healthCheckUrlPath: ${management.context-path}/health
    registryFetchIntervalSeconds: 5
    leaseRenewalIntervalInSeconds: 5
  client:
    registerWithEureka: true
    fetchRegistry: true

sfdc:
  service:
    unavailable: '{"status":503,"data": "Service currently unavailable."}'
  authservice:
    endpoint: http://authservice

---
spring:
  profiles: local
  instance:
    nonSecurePort: ${server.port}
  redis:
    host: redis
    port: 6379
eureka:
  instance:
    preferIpAddress: true
    hostname: opportunityservice
    nonSecurePort: ${server.port}
  client:
    serviceUrl:
      defaultZone: http://discovery:8761/eureka/

---
spring:
  profiles: cloud # For deployment in Cloud Foundry
  cloud:
    services:
      registrationMethod: route
eureka:
  instance:
    securePortEnabled: true
    nonSecurePortEnabled: false
    secureVirtualHostName: ${spring.application.name}
    metadataMap:
      instanceId: ${vcap.application.instance_id:${spring.application.name}:${spring.application.instance_id:${server.port}}}
