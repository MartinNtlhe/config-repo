server:
  port: ${PORT:0}

spring:
  cloud.stream.bindings.accountProcessor:
    destination: datasync.soap.notifications
    group: accounts
    consumer.max-attempts: 3
  cloud.stream.bindings.accountUpdater:
    destination: datasync.account.notifications
    producer.requiredGroups: accounts
  cloud.stream:
    default.contentType: application/json
    instanceIndex: ${INSTANCE_INDEX:0}
    rabbit:
      binder.connection-name-prefix: ${spring.application.name}
      bindings.accountProcessor.consumer:
        prefetch: 5
        consumer-tag-prefix: ${spring.application.name}-${spring.cloud.stream.bindings.accountProcessor.group}-${spring.cloud.stream.instanceIndex}

management:
  cloudfoundry:
    skip-ssl-validation: true
    enabled: true
  endpoints:
    web:
      base-path: /manage
      exposure:
        include: '*'
  endpoint:
    health:
      roles: USER
      show-details: always
    configprops:
      # keys-to-sanitize:  password # suffix or regex
      keys-to-sanitize: "password,secret"
      # pwd,uid,password,secret,key,client_id,client_key # suffix or regex
    env:
      keys-to-sanitize: "password,secret"
      # password,secret,key,token,.*credentials.*,vcap_services # suffix or regex
# password,secret,key,token,.*credentials.*,vcap_services

logging:
  level:
    com.netflix.eureka: ERROR
    com.netflix.discovery: ERROR
    org.springframework.cloud: ERROR
    io.pivotal.sfdc: DEBUG

---
spring:
  profiles: local
  instance:
    nonSecurePort: ${server.port}
  sleuth.sampler.rate: 100
  sleuth.sampler.probability: 1.0
  zipkin.sender.type: rabbit
  zipkin.compression.enabled: true
  rabbitmq.listener.direct.retry.enabled: true
  rabbitmq.listener.simple.retry.enabled: true
eureka:
  instance:
    preferIpAddress: true
    hostname: accountsource
    nonSecurePort: ${server.port}
    leaseRenewalIntervalInSeconds: 10
    leaseExpirationDurationInSeconds: 30
  client:
    registerWithEureka: true
    fetchRegistry: true
    registryFetchIntervalSeconds: 10
    healthcheck:
      enabled: true
    serviceUrl:
      defaultZone: http://${EUREKA_HOST:discovery}:8761/eureka/
ribbon:
  IsSecure: false
---
spring:
  profiles: cloud # For deployment in Cloud Foundry
  cloud:
    services:
      registrationMethod: direct
  rabbitmq:
    addresses: ${vcap.services.event-bus.credentials.uri}
    ssl.enabled: ${vcap.services.event-bus.credentials.ssl}
    ssl.algorithm: TLSv1.2
  sleuth.sampler.rate: 100
  sleuth.sampler.probability: 1.0
  zipkin.compression.enabled: true
  zipkin.baseUrl: https://${vcap.services.wf-proxy.credentials.hostname}:9411
  zipkin.sender.type: web
  # zipkin.sender.type: rabbit
  # rabbitmq.listener.direct.retry.enabled: true
  # rabbitmq.listener.simple.retry.enabled: true
eureka:
  instance:
    nonSecurePortEnabled: true
    nonSecurePort: 8080
    securePortEnabled: true
    securePort: 61001
    hostname: ${vcap.application.uris[0]}
    leaseRenewalIntervalInSeconds: 10
    leaseExpirationDurationInSeconds: 30
  client:
    registerWithEureka: true
    fetchRegistry: true
    registryFetchIntervalSeconds: 10
    healthcheck:
      enabled: true
ribbon:
  IsSecure: true
management.metrics:
  enable.all: true
  export.wavefront:
    source: accountprocessor
    enabled: true
    uri: proxy://${vcap.services.wf-proxy.credentials.hostname}:${vcap.services.wf-proxy.credentials.port}
    step: 10s
  web.server.request.autotime.enabled: true
